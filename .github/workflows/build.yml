name: Build EXE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller selenium requests webdriver-manager

    - name: Download Latest ChromeDriver
      run: |
        # Chrome for Testing API를 사용하여 최신 안정 버전 다운로드
        $response = Invoke-RestMethod -Uri "https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json"
        $latestVersion = $response.versions | Where-Object { $_.version -match "^\d+\.\d+\.\d+\.\d+$" } | Sort-Object { [version]$_.version } | Select-Object -Last 1
        $chromeDriverDownload = $latestVersion.downloads.chromedriver | Where-Object { $_.platform -eq "win32" }
        $chromeDriverUrl = $chromeDriverDownload.url
        
        Write-Host "Downloading ChromeDriver version: $($latestVersion.version)"
        Write-Host "Download URL: $chromeDriverUrl"
        
        Invoke-WebRequest -Uri $chromeDriverUrl -OutFile "chromedriver.zip"
        Expand-Archive "chromedriver.zip" -DestinationPath "chromedriver_temp" -Force
        
        # chromedriver.exe를 재귀적으로 찾아서 루트 디렉토리로 복사
        $found = $false
        Get-ChildItem -Path "chromedriver_temp" -Recurse -Filter "chromedriver.exe" | ForEach-Object {
          if (-not $found) {
            Copy-Item -Path $_.FullName -Destination "chromedriver.exe" -Force
            Write-Host "ChromeDriver found and copied: $($_.FullName)"
            $found = $true
          }
        }
        
        # 임시 폴더 정리
        Remove-Item -Path "chromedriver_temp" -Recurse -Force
        
        if (Test-Path "chromedriver.exe") {
          Write-Host "ChromeDriver setup completed successfully"
        } else {
          Write-Error "ChromeDriver not found after extraction"
          exit 1
        }

    - name: Build EXE
      run: |
        pyinstaller --onefile --add-data "chromedriver.exe;." --name review_photo review_photo.py

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: review_photo_exe
        path: dist/review_photo.exe 